{
  "address": "0xC7F05dfE5EE4D2CED760ECEa777aB65AEDb8d5c4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contributionEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contributionTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executePropsal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newContributionTime",
          "type": "uint256"
        }
      ],
      "name": "extendContributionTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "investor",
          "type": "address"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalAvailableFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isInvestor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeemShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contributionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_voteTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minVotes",
          "type": "uint256"
        }
      ],
      "name": "setContributionTimeNewVoteTimeMinVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "voteOnProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1f3fbbcd0de7b1c4e839b3df9ee09a254c26e6558215ffa3f494e06ebf9f6c4b",
  "receipt": {
    "to": null,
    "from": "0x9b2849DDeB335cc602a5CE492a33BD787c061Eec",
    "contractAddress": "0xC7F05dfE5EE4D2CED760ECEa777aB65AEDb8d5c4",
    "transactionIndex": 8,
    "gasUsed": "2651529",
    "logsBloom": "0x
    "blockHash": "0x408b0e9f43c0fd245bb368dac1ae1744ac8f78b5f984d81b9548aee9b786e39a",
    "transactionHash": "0x1f3fbbcd0de7b1c4e839b3df9ee09a254c26e6558215ffa3f494e06ebf9f6c4b",
    "logs": [],
    "blockNumber": 3135716,
    "cumulativeGasUsed": "3505177",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9087f1638a5f58bde11f4590882a97eb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributionEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contributionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executePropsal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newContributionTime\",\"type\":\"uint256\"}],\"name\":\"extendContributionTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalAvailableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInvestor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contributionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_voteTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minVotes\",\"type\":\"uint256\"}],\"name\":\"setContributionTimeNewVoteTimeMinVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A DAO making contract, for proposals, and contributions, and voting. collects money from investors and allocates shares. Keep track of contributions and shares. Allow investors transfer shares. Allow investment proposals to be created and voted. Execute successful investment proposals.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAOContract.sol\":\"DAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DAOContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n/**\\r\\n * A DAO making contract, for proposals, and contributions, and voting.\\r\\n * collects money from investors and allocates shares.\\r\\n * Keep track of contributions and shares.\\r\\n * Allow investors transfer shares.\\r\\n * Allow investment proposals to be created and voted.\\r\\n * Execute successful investment proposals.\\r\\n */\\r\\n\\r\\ncontract DAO {\\r\\n\\r\\n    struct Proposal{\\r\\n        uint id;\\r\\n        uint amount;\\r\\n        uint votes;\\r\\n        uint end;\\r\\n        string name;\\r\\n        address payable recipient;\\r\\n        bytes data;\\r\\n        bool executed;\\r\\n    }\\r\\n\\r\\n    mapping(address => bool) public isInvestor; // keep track of investors\\r\\n    mapping(address => uint) public shares; // keep track of shares\\r\\n    mapping(address => mapping(uint => bool)) public votes; // keep track of individual votes\\r\\n    mapping(uint => Proposal) public proposals; // maps proposals\\r\\n    uint public totalShares; // total shares of members\\r\\n    uint public availableFunds; // address(this).balance of contract\\r\\n    uint public contributionTime;\\r\\n    uint public contributionEnd; // time for ending contributions\\r\\n    uint public nextProposalId; // id for proposals\\r\\n    uint public voteTime; // deadline for vote on proposal to end\\r\\n    uint public minVotes; // minimal number of votes required\\r\\n    address public admin;\\r\\n    address [] public investors;\\r\\n\\r\\n    modifier onlyInvestors() {\\r\\n        require(isInvestor[msg.sender] = true, \\\"error: Not investor\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyAdmin() {\\r\\n        require(msg.sender == admin, \\\"error: nnot admin\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        admin = msg.sender;\\r\\n    }\\r\\n\\r\\n    // for eth returns of successful proposal investments\\r\\n    receive() external payable {\\r\\n        availableFunds += msg.value;\\r\\n    }\\r\\n\\r\\n    function setContributionTimeNewVoteTimeMinVotes(uint _contributionTime, uint _voteTime, uint _minVotes) public onlyInvestors {\\r\\n        require(_minVotes > 0 && _minVotes < 200, \\\"error: minVotes should be between 0 and 200\\\");\\r\\n        minVotes = _minVotes;\\r\\n\\r\\n        contributionTime = _contributionTime;\\r\\n        contributionEnd = block.timestamp + contributionTime;\\r\\n\\r\\n        voteTime = _voteTime;\\r\\n    }\\r\\n\\r\\n    function contribute(address investor) payable external {\\r\\n        require(block.timestamp < contributionEnd, \\\"error: contribution over\\\");\\r\\n        investors.push(investor);\\r\\n        isInvestor[msg.sender] = true; // make contributor an investor\\r\\n        shares[msg.sender] += msg.value; // increase shares of investor\\r\\n        totalShares += msg.value; // increase totalShares\\r\\n        availableFunds += msg.value; // increase available funds\\r\\n    }\\r\\n\\r\\n    // use function to extend contribution time\\r\\n    function extendContributionTime(uint _newContributionTime) public onlyAdmin {\\r\\n        contributionEnd = block.timestamp + _newContributionTime;\\r\\n    }\\r\\n\\r\\n    function redeemShare(uint amount) external onlyInvestors {\\r\\n        require(shares[msg.sender] >= amount, \\\"error: not enough shares\\\");\\r\\n        require(availableFunds >= amount, \\\"error: not enough available funds\\\");\\r\\n        shares[msg.sender] -= amount;\\r\\n        availableFunds -= amount;\\r\\n        payable(msg.sender).transfer(amount);\\r\\n    }\\r\\n\\r\\n    function transferShare(uint amount, address to) external onlyInvestors {\\r\\n        require(shares[msg.sender] >= amount, \\\"error: insufficient shares\\\");\\r\\n        shares[msg.sender] -= amount;\\r\\n        shares[to] += amount;\\r\\n        isInvestor[to] = true;\\r\\n    }\\r\\n\\r\\n    function createProposal(\\r\\n        string memory name,\\r\\n        uint amount,\\r\\n        address payable recipient,\\r\\n        bytes calldata data\\r\\n    ) public onlyInvestors {\\r\\n        require(availableFunds >= amount, \\\"error: insufficient funds\\\");\\r\\n        proposals[nextProposalId] = Proposal(\\r\\n            nextProposalId,\\r\\n            amount,\\r\\n            0,\\r\\n            block.timestamp + voteTime,\\r\\n            name,\\r\\n            recipient,\\r\\n            data,\\r\\n            false\\r\\n        );\\r\\n        availableFunds -= amount;\\r\\n        nextProposalId++;\\r\\n    }\\r\\n\\r\\n    function voteOnProposal(uint proposalId) external onlyInvestors {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(votes[msg.sender][proposalId] == false, \\\"error: investor can only vote once\\\");\\r\\n        require(block.timestamp < proposal.end, \\\"error: proposal already ended\\\");\\r\\n        votes[msg.sender][proposalId] = true;\\r\\n        proposal.votes += shares[msg.sender];\\r\\n    }\\r\\n\\r\\n    function executePropsal(uint proposalId) external onlyAdmin {\\r\\n        Proposal storage proposal = proposals[proposalId];\\r\\n        require(block.timestamp >= proposal.end, \\\"error: cannot execute before end of proposal\\\");\\r\\n        require(!proposal.executed, \\\"error: proposal already executed\\\");\\r\\n        require((proposal.votes / totalShares) * 200 >= minVotes, \\\"error: cannot execute proposal with votes below minVotes\\\");\\r\\n        // transfer funds using call for check effects\\r\\n        (bool success, ) = proposal.recipient.call{value: proposal.amount}(proposal.data);\\r\\n        require(success, \\\"error: tx failed\\\");\\r\\n    }\\r\\n\\r\\n    function transferFunds(address payable to, bytes memory data, uint amount) external onlyAdmin {\\r\\n        require(amount <= availableFunds, \\\"error: insufficient funds\\\");\\r\\n        availableFunds -= amount;\\r\\n        (bool success, ) = to.call{value: amount}(data);\\r\\n        require(success, \\\"error: tx failed\\\");\\r\\n    }\\r\\n    \\r\\n    // transfer using to\\r\\n    function transferEther(uint amount, address payable to) external onlyAdmin {\\r\\n        to.transfer(amount);\\r\\n    }\\r\\n\\r\\n    // Getter functions\\r\\n    function getInvestors() public view returns(address [] memory) {\\r\\n        return investors;\\r\\n    }\\r\\n\\r\\n    function getTotalAvailableFunds() public view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getShares(address investor) public view returns(uint256) {\\r\\n        return shares[investor];\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x9bca587f22bfa0282dbe675029c2f7f73faf174ac6444d0b6a31e254ed19b7f6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612eca806100616000396000f3fe6080604052600436106101855760003560e01c80639bf39dce116100d1578063bd03e5011161008a578063cee2a9cf11610064578063cee2a9cf1461058a578063d151b516146105c7578063f04da65b146105f2578063f851a4401461062f576101a5565b8063bd03e501146104fb578063c3ad2d4414610524578063ce7c2ac21461054d576101a5565b80639bf39dce146103e95780639f2524ee14610414578063a8bb8f3a14610451578063add68edc1461047c578063b2f5a54c146104a5578063bcf93dd6146104d0576101a5565b80633feb5f2b1161013e5780637a6230f6116101185780637a6230f614610345578063868643df1461036e57806387cf67ba146103975780638d258beb146103c0576101a5565b80633feb5f2b146102c157806346fcff4c146102fe57806373e888fd14610329576101a5565b8063013cf08b146101aa578063039383e6146101ee5780632ab09d14146102175780633a98ef39146102425780633cc228fd1461026d5780633ee0c77d14610298576101a5565b366101a557346005600082825461019c9190611c7d565b92505081905550005b600080fd5b3480156101b657600080fd5b506101d160048036038101906101cc9190611d13565b61065a565b6040516101e5989796959493929190611e99565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190611f63565b6107df565b005b34801561022357600080fd5b5061022c6109fd565b6040516102399190611fa3565b60405180910390f35b34801561024e57600080fd5b50610257610a03565b6040516102649190611fa3565b60405180910390f35b34801561027957600080fd5b50610282610a09565b60405161028f9190611fa3565b60405180910390f35b3480156102a457600080fd5b506102bf60048036038101906102ba9190611d13565b610a0f565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190611d13565b610ab4565b6040516102f59190611fcd565b60405180910390f35b34801561030a57600080fd5b50610313610af3565b6040516103209190611fa3565b60405180910390f35b610343600480360381019061033e9190611fe8565b610af9565b005b34801561035157600080fd5b5061036c60048036038101906103679190611d13565b610c82565b005b34801561037a57600080fd5b5061039560048036038101906103909190611d13565b610f02565b005b3480156103a357600080fd5b506103be60048036038101906103b991906121d6565b611117565b005b3480156103cc57600080fd5b506103e760048036038101906103e2919061231b565b6113b1565b005b3480156103f557600080fd5b506103fe611553565b60405161040b9190611fa3565b60405180910390f35b34801561042057600080fd5b5061043b6004803603810190610436919061238a565b611559565b60405161044891906123ca565b60405180910390f35b34801561045d57600080fd5b50610466611588565b6040516104739190611fa3565b60405180910390f35b34801561048857600080fd5b506104a3600480360381019061049e9190611d13565b611590565b005b3480156104b157600080fd5b506104ba6117ed565b6040516104c791906124a3565b60405180910390f35b3480156104dc57600080fd5b506104e561187b565b6040516104f29190611fa3565b60405180910390f35b34801561050757600080fd5b50610522600480360381019061051d91906124c5565b611881565b005b34801561053057600080fd5b5061054b60048036038101906105469190612505565b61195c565b005b34801561055957600080fd5b50610574600480360381019061056f9190611fe8565b611a6e565b6040516105819190611fa3565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac9190611fe8565b611a86565b6040516105be91906123ca565b60405180910390f35b3480156105d357600080fd5b506105dc611aa6565b6040516105e99190611fa3565b60405180910390f35b3480156105fe57600080fd5b5061061960048036038101906106149190611fe8565b611aac565b6040516106269190611fa3565b60405180910390f35b34801561063b57600080fd5b50610644611af5565b6040516106519190611fcd565b60405180910390f35b600360205280600052604060002060009150905080600001549080600101549080600201549080600301549080600401805461069590612587565b80601f01602080910402602001604051908101604052809291908181526020018280546106c190612587565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600601805461074990612587565b80601f016020809104026020016040519081016040528092919081815260200182805461077590612587565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b5050505050908060070160009054906101000a900460ff16905088565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90612605565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90612671565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109459190612691565b9250508190555081600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099b9190611c7d565b9250508190555060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60085481565b60045481565b600a5481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690612711565b60405180910390fd5b8042610aab9190611c7d565b60078190555050565b600c8181548110610ac457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6007544210610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061277d565b60405180910390fd5b600c819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c469190611c7d565b925050819055503460046000828254610c5f9190611c7d565b925050819055503460056000828254610c789190611c7d565b9250508190555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0990612711565b60405180910390fd5b60006003600083815260200190815260200160002090508060030154421015610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d679061280f565b60405180910390fd5b8060070160009054906101000a900460ff1615610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db99061287b565b60405180910390fd5b600a5460c86004548360020154610dd991906128ca565b610de391906128fb565b1015610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b906129c7565b60405180910390fd5b60008160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826001015483600601604051610e779190612a86565b60006040518083038185875af1925050503d8060008114610eb4576040519150601f19603f3d011682016040523d82523d6000602084013e610eb9565b606091505b5050905080610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef490612ae9565b60405180910390fd5b505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90612605565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611019576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101090612b55565b60405180910390fd5b80600554101561105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590612be7565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ad9190612691565b9250508190555080600560008282546110c69190612691565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611113573d6000803e3d6000fd5b5050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790556111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a390612605565b60405180910390fd5b8360055410156111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e890612c53565b60405180910390fd5b604051806101000160405280600854815260200185815260200160008152602001600954426112209190611c7d565b81526020018681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600015158152506003600060085481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040190805190602001906112f1929190611b1b565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006019080519060200190611355929190611ba1565b5060e08201518160070160006101000a81548160ff021916908315150217905550905050836005600082825461138b9190612691565b92505081905550600860008154809291906113a590612c73565b91905055505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143890612711565b60405180910390fd5b600554811115611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d90612c53565b60405180910390fd5b80600560008282546114989190612691565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff1682846040516114c79190612ced565b60006040518083038185875af1925050503d8060008114611504576040519150601f19603f3d011682016040523d82523d6000602084013e611509565b606091505b505090508061154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490612ae9565b60405180910390fd5b50505050565b60065481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600047905090565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c90612605565b60405180910390fd5b600060036000838152602001908152602001600020905060001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff161515146116e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d790612d76565b60405180910390fd5b80600301544210611726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171d90612de2565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548160020160008282546117e29190611c7d565b925050819055505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561187157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611827575b5050505050905090565b60095481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190890612711565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611957573d6000803e3d6000fd5b505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790556119f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e890612605565b60405180910390fd5b600081118015611a01575060c881105b611a40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3790612e74565b60405180910390fd5b80600a819055508260068190555060065442611a5c9190611c7d565b60078190555081600981905550505050565b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054611b2790612587565b90600052602060002090601f016020900481019282611b495760008555611b90565b82601f10611b6257805160ff1916838001178555611b90565b82800160010185558215611b90579182015b82811115611b8f578251825591602001919060010190611b74565b5b509050611b9d9190611c27565b5090565b828054611bad90612587565b90600052602060002090601f016020900481019282611bcf5760008555611c16565b82601f10611be857805160ff1916838001178555611c16565b82800160010185558215611c16579182015b82811115611c15578251825591602001919060010190611bfa565b5b509050611c239190611c27565b5090565b5b80821115611c40576000816000905550600101611c28565b5090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8882611c44565b9150611c9383611c44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cc857611cc7611c4e565b5b828201905092915050565b6000604051905090565b600080fd5b600080fd5b611cf081611c44565b8114611cfb57600080fd5b50565b600081359050611d0d81611ce7565b92915050565b600060208284031215611d2957611d28611cdd565b5b6000611d3784828501611cfe565b91505092915050565b611d4981611c44565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d89578082015181840152602081019050611d6e565b83811115611d98576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dba82611d4f565b611dc48185611d5a565b9350611dd4818560208601611d6b565b611ddd81611d9e565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e1382611de8565b9050919050565b611e2381611e08565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611e5082611e29565b611e5a8185611e34565b9350611e6a818560208601611d6b565b611e7381611d9e565b840191505092915050565b60008115159050919050565b611e9381611e7e565b82525050565b600061010082019050611eaf600083018b611d40565b611ebc602083018a611d40565b611ec96040830189611d40565b611ed66060830188611d40565b8181036080830152611ee88187611daf565b9050611ef760a0830186611e1a565b81810360c0830152611f098185611e45565b9050611f1860e0830184611e8a565b9998505050505050505050565b6000611f3082611de8565b9050919050565b611f4081611f25565b8114611f4b57600080fd5b50565b600081359050611f5d81611f37565b92915050565b60008060408385031215611f7a57611f79611cdd565b5b6000611f8885828601611cfe565b9250506020611f9985828601611f4e565b9150509250929050565b6000602082019050611fb86000830184611d40565b92915050565b611fc781611f25565b82525050565b6000602082019050611fe26000830184611fbe565b92915050565b600060208284031215611ffe57611ffd611cdd565b5b600061200c84828501611f4e565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61205782611d9e565b810181811067ffffffffffffffff821117156120765761207561201f565b5b80604052505050565b6000612089611cd3565b9050612095828261204e565b919050565b600067ffffffffffffffff8211156120b5576120b461201f565b5b6120be82611d9e565b9050602081019050919050565b82818337600083830152505050565b60006120ed6120e88461209a565b61207f565b9050828152602081018484840111156121095761210861201a565b5b6121148482856120cb565b509392505050565b600082601f83011261213157612130612015565b5b81356121418482602086016120da565b91505092915050565b61215381611e08565b811461215e57600080fd5b50565b6000813590506121708161214a565b92915050565b600080fd5b600080fd5b60008083601f84011261219657612195612015565b5b8235905067ffffffffffffffff8111156121b3576121b2612176565b5b6020830191508360018202830111156121cf576121ce61217b565b5b9250929050565b6000806000806000608086880312156121f2576121f1611cdd565b5b600086013567ffffffffffffffff8111156122105761220f611ce2565b5b61221c8882890161211c565b955050602061222d88828901611cfe565b945050604061223e88828901612161565b935050606086013567ffffffffffffffff81111561225f5761225e611ce2565b5b61226b88828901612180565b92509250509295509295909350565b600067ffffffffffffffff8211156122955761229461201f565b5b61229e82611d9e565b9050602081019050919050565b60006122be6122b98461227a565b61207f565b9050828152602081018484840111156122da576122d961201a565b5b6122e58482856120cb565b509392505050565b600082601f83011261230257612301612015565b5b81356123128482602086016122ab565b91505092915050565b60008060006060848603121561233457612333611cdd565b5b600061234286828701612161565b935050602084013567ffffffffffffffff81111561236357612362611ce2565b5b61236f868287016122ed565b925050604061238086828701611cfe565b9150509250925092565b600080604083850312156123a1576123a0611cdd565b5b60006123af85828601611f4e565b92505060206123c085828601611cfe565b9150509250929050565b60006020820190506123df6000830184611e8a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61241a81611f25565b82525050565b600061242c8383612411565b60208301905092915050565b6000602082019050919050565b6000612450826123e5565b61245a81856123f0565b935061246583612401565b8060005b8381101561249657815161247d8882612420565b975061248883612438565b925050600181019050612469565b5085935050505092915050565b600060208201905081810360008301526124bd8184612445565b905092915050565b600080604083850312156124dc576124db611cdd565b5b60006124ea85828601611cfe565b92505060206124fb85828601612161565b9150509250929050565b60008060006060848603121561251e5761251d611cdd565b5b600061252c86828701611cfe565b935050602061253d86828701611cfe565b925050604061254e86828701611cfe565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061259f57607f821691505b602082108114156125b3576125b2612558565b5b50919050565b7f6572726f723a204e6f7420696e766573746f7200000000000000000000000000600082015250565b60006125ef601383611d5a565b91506125fa826125b9565b602082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f6572726f723a20696e73756666696369656e7420736861726573000000000000600082015250565b600061265b601a83611d5a565b915061266682612625565b602082019050919050565b6000602082019050818103600083015261268a8161264e565b9050919050565b600061269c82611c44565b91506126a783611c44565b9250828210156126ba576126b9611c4e565b5b828203905092915050565b7f6572726f723a206e6e6f742061646d696e000000000000000000000000000000600082015250565b60006126fb601183611d5a565b9150612706826126c5565b602082019050919050565b6000602082019050818103600083015261272a816126ee565b9050919050565b7f6572726f723a20636f6e747269627574696f6e206f7665720000000000000000600082015250565b6000612767601883611d5a565b915061277282612731565b602082019050919050565b600060208201905081810360008301526127968161275a565b9050919050565b7f6572726f723a2063616e6e6f742065786563757465206265666f726520656e6460008201527f206f662070726f706f73616c0000000000000000000000000000000000000000602082015250565b60006127f9602c83611d5a565b91506128048261279d565b604082019050919050565b60006020820190508181036000830152612828816127ec565b9050919050565b7f6572726f723a2070726f706f73616c20616c7265616479206578656375746564600082015250565b6000612865602083611d5a565b91506128708261282f565b602082019050919050565b6000602082019050818103600083015261289481612858565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128d582611c44565b91506128e083611c44565b9250826128f0576128ef61289b565b5b828204905092915050565b600061290682611c44565b915061291183611c44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561294a57612949611c4e565b5b828202905092915050565b7f6572726f723a2063616e6e6f7420657865637574652070726f706f73616c207760008201527f69746820766f7465732062656c6f77206d696e566f7465730000000000000000602082015250565b60006129b1603883611d5a565b91506129bc82612955565b604082019050919050565b600060208201905081810360008301526129e0816129a4565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612a1481612587565b612a1e81866129e7565b94506001821660008114612a395760018114612a4a57612a7d565b60ff19831686528186019350612a7d565b612a53856129f2565b60005b83811015612a7557815481890152600182019150602081019050612a56565b838801955050505b50505092915050565b6000612a928284612a07565b915081905092915050565b7f6572726f723a207478206661696c656400000000000000000000000000000000600082015250565b6000612ad3601083611d5a565b9150612ade82612a9d565b602082019050919050565b60006020820190508181036000830152612b0281612ac6565b9050919050565b7f6572726f723a206e6f7420656e6f756768207368617265730000000000000000600082015250565b6000612b3f601883611d5a565b9150612b4a82612b09565b602082019050919050565b60006020820190508181036000830152612b6e81612b32565b9050919050565b7f6572726f723a206e6f7420656e6f75676820617661696c61626c652066756e6460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bd1602183611d5a565b9150612bdc82612b75565b604082019050919050565b60006020820190508181036000830152612c0081612bc4565b9050919050565b7f6572726f723a20696e73756666696369656e742066756e647300000000000000600082015250565b6000612c3d601983611d5a565b9150612c4882612c07565b602082019050919050565b60006020820190508181036000830152612c6c81612c30565b9050919050565b6000612c7e82611c44565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612cb157612cb0611c4e565b5b600182019050919050565b6000612cc782611e29565b612cd181856129e7565b9350612ce1818560208601611d6b565b80840191505092915050565b6000612cf98284612cbc565b915081905092915050565b7f6572726f723a20696e766573746f722063616e206f6e6c7920766f7465206f6e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d60602283611d5a565b9150612d6b82612d04565b604082019050919050565b60006020820190508181036000830152612d8f81612d53565b9050919050565b7f6572726f723a2070726f706f73616c20616c726561647920656e646564000000600082015250565b6000612dcc601d83611d5a565b9150612dd782612d96565b602082019050919050565b60006020820190508181036000830152612dfb81612dbf565b9050919050565b7f6572726f723a206d696e566f7465732073686f756c642062652062657477656560008201527f6e203020616e6420323030000000000000000000000000000000000000000000602082015250565b6000612e5e602b83611d5a565b9150612e6982612e02565b604082019050919050565b60006020820190508181036000830152612e8d81612e51565b905091905056fea2646970667358221220064f47fdcc0f503e99106d8918a9afa47fd8d9557bf05e8ff9476c17221dd09964736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106101855760003560e01c80639bf39dce116100d1578063bd03e5011161008a578063cee2a9cf11610064578063cee2a9cf1461058a578063d151b516146105c7578063f04da65b146105f2578063f851a4401461062f576101a5565b8063bd03e501146104fb578063c3ad2d4414610524578063ce7c2ac21461054d576101a5565b80639bf39dce146103e95780639f2524ee14610414578063a8bb8f3a14610451578063add68edc1461047c578063b2f5a54c146104a5578063bcf93dd6146104d0576101a5565b80633feb5f2b1161013e5780637a6230f6116101185780637a6230f614610345578063868643df1461036e57806387cf67ba146103975780638d258beb146103c0576101a5565b80633feb5f2b146102c157806346fcff4c146102fe57806373e888fd14610329576101a5565b8063013cf08b146101aa578063039383e6146101ee5780632ab09d14146102175780633a98ef39146102425780633cc228fd1461026d5780633ee0c77d14610298576101a5565b366101a557346005600082825461019c9190611c7d565b92505081905550005b600080fd5b3480156101b657600080fd5b506101d160048036038101906101cc9190611d13565b61065a565b6040516101e5989796959493929190611e99565b60405180910390f35b3480156101fa57600080fd5b5061021560048036038101906102109190611f63565b6107df565b005b34801561022357600080fd5b5061022c6109fd565b6040516102399190611fa3565b60405180910390f35b34801561024e57600080fd5b50610257610a03565b6040516102649190611fa3565b60405180910390f35b34801561027957600080fd5b50610282610a09565b60405161028f9190611fa3565b60405180910390f35b3480156102a457600080fd5b506102bf60048036038101906102ba9190611d13565b610a0f565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190611d13565b610ab4565b6040516102f59190611fcd565b60405180910390f35b34801561030a57600080fd5b50610313610af3565b6040516103209190611fa3565b60405180910390f35b610343600480360381019061033e9190611fe8565b610af9565b005b34801561035157600080fd5b5061036c60048036038101906103679190611d13565b610c82565b005b34801561037a57600080fd5b5061039560048036038101906103909190611d13565b610f02565b005b3480156103a357600080fd5b506103be60048036038101906103b991906121d6565b611117565b005b3480156103cc57600080fd5b506103e760048036038101906103e2919061231b565b6113b1565b005b3480156103f557600080fd5b506103fe611553565b60405161040b9190611fa3565b60405180910390f35b34801561042057600080fd5b5061043b6004803603810190610436919061238a565b611559565b60405161044891906123ca565b60405180910390f35b34801561045d57600080fd5b50610466611588565b6040516104739190611fa3565b60405180910390f35b34801561048857600080fd5b506104a3600480360381019061049e9190611d13565b611590565b005b3480156104b157600080fd5b506104ba6117ed565b6040516104c791906124a3565b60405180910390f35b3480156104dc57600080fd5b506104e561187b565b6040516104f29190611fa3565b60405180910390f35b34801561050757600080fd5b50610522600480360381019061051d91906124c5565b611881565b005b34801561053057600080fd5b5061054b60048036038101906105469190612505565b61195c565b005b34801561055957600080fd5b50610574600480360381019061056f9190611fe8565b611a6e565b6040516105819190611fa3565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac9190611fe8565b611a86565b6040516105be91906123ca565b60405180910390f35b3480156105d357600080fd5b506105dc611aa6565b6040516105e99190611fa3565b60405180910390f35b3480156105fe57600080fd5b5061061960048036038101906106149190611fe8565b611aac565b6040516106269190611fa3565b60405180910390f35b34801561063b57600080fd5b50610644611af5565b6040516106519190611fcd565b60405180910390f35b600360205280600052604060002060009150905080600001549080600101549080600201549080600301549080600401805461069590612587565b80601f01602080910402602001604051908101604052809291908181526020018280546106c190612587565b801561070e5780601f106106e35761010080835404028352916020019161070e565b820191906000526020600020905b8154815290600101906020018083116106f157829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600601805461074990612587565b80601f016020809104026020016040519081016040528092919081815260200182805461077590612587565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b5050505050908060070160009054906101000a900460ff16905088565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90612605565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90612671565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109459190612691565b9250508190555081600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099b9190611c7d565b9250508190555060016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60085481565b60045481565b600a5481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9690612711565b60405180910390fd5b8042610aab9190611c7d565b60078190555050565b600c8181548110610ac457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6007544210610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061277d565b60405180910390fd5b600c819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c469190611c7d565b925050819055503460046000828254610c5f9190611c7d565b925050819055503460056000828254610c789190611c7d565b9250508190555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0990612711565b60405180910390fd5b60006003600083815260200190815260200160002090508060030154421015610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d679061280f565b60405180910390fd5b8060070160009054906101000a900460ff1615610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db99061287b565b60405180910390fd5b600a5460c86004548360020154610dd991906128ca565b610de391906128fb565b1015610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b906129c7565b60405180910390fd5b60008160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826001015483600601604051610e779190612a86565b60006040518083038185875af1925050503d8060008114610eb4576040519150601f19603f3d011682016040523d82523d6000602084013e610eb9565b606091505b5050905080610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef490612ae9565b60405180910390fd5b505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90612605565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611019576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101090612b55565b60405180910390fd5b80600554101561105e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105590612be7565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110ad9190612691565b9250508190555080600560008282546110c69190612691565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611113573d6000803e3d6000fd5b5050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790556111ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a390612605565b60405180910390fd5b8360055410156111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e890612c53565b60405180910390fd5b604051806101000160405280600854815260200185815260200160008152602001600954426112209190611c7d565b81526020018681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600015158152506003600060085481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040190805190602001906112f1929190611b1b565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006019080519060200190611355929190611ba1565b5060e08201518160070160006101000a81548160ff021916908315150217905550905050836005600082825461138b9190612691565b92505081905550600860008154809291906113a590612c73565b91905055505050505050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143890612711565b60405180910390fd5b600554811115611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d90612c53565b60405180910390fd5b80600560008282546114989190612691565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff1682846040516114c79190612ced565b60006040518083038185875af1925050503d8060008114611504576040519150601f19603f3d011682016040523d82523d6000602084013e611509565b606091505b505090508061154d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154490612ae9565b60405180910390fd5b50505050565b60065481565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600047905090565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055611625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161c90612605565b60405180910390fd5b600060036000838152602001908152602001600020905060001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff161515146116e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d790612d76565b60405180910390fd5b80600301544210611726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171d90612de2565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff021916908315150217905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548160020160008282546117e29190611c7d565b925050819055505050565b6060600c80548060200260200160405190810160405280929190818152602001828054801561187157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611827575b5050505050905090565b60095481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190890612711565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611957573d6000803e3d6000fd5b505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790556119f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e890612605565b60405180910390fd5b600081118015611a01575060c881105b611a40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3790612e74565b60405180910390fd5b80600a819055508260068190555060065442611a5c9190611c7d565b60078190555081600981905550505050565b60016020528060005260406000206000915090505481565b60006020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054611b2790612587565b90600052602060002090601f016020900481019282611b495760008555611b90565b82601f10611b6257805160ff1916838001178555611b90565b82800160010185558215611b90579182015b82811115611b8f578251825591602001919060010190611b74565b5b509050611b9d9190611c27565b5090565b828054611bad90612587565b90600052602060002090601f016020900481019282611bcf5760008555611c16565b82601f10611be857805160ff1916838001178555611c16565b82800160010185558215611c16579182015b82811115611c15578251825591602001919060010190611bfa565b5b509050611c239190611c27565b5090565b5b80821115611c40576000816000905550600101611c28565b5090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c8882611c44565b9150611c9383611c44565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cc857611cc7611c4e565b5b828201905092915050565b6000604051905090565b600080fd5b600080fd5b611cf081611c44565b8114611cfb57600080fd5b50565b600081359050611d0d81611ce7565b92915050565b600060208284031215611d2957611d28611cdd565b5b6000611d3784828501611cfe565b91505092915050565b611d4981611c44565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d89578082015181840152602081019050611d6e565b83811115611d98576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dba82611d4f565b611dc48185611d5a565b9350611dd4818560208601611d6b565b611ddd81611d9e565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e1382611de8565b9050919050565b611e2381611e08565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611e5082611e29565b611e5a8185611e34565b9350611e6a818560208601611d6b565b611e7381611d9e565b840191505092915050565b60008115159050919050565b611e9381611e7e565b82525050565b600061010082019050611eaf600083018b611d40565b611ebc602083018a611d40565b611ec96040830189611d40565b611ed66060830188611d40565b8181036080830152611ee88187611daf565b9050611ef760a0830186611e1a565b81810360c0830152611f098185611e45565b9050611f1860e0830184611e8a565b9998505050505050505050565b6000611f3082611de8565b9050919050565b611f4081611f25565b8114611f4b57600080fd5b50565b600081359050611f5d81611f37565b92915050565b60008060408385031215611f7a57611f79611cdd565b5b6000611f8885828601611cfe565b9250506020611f9985828601611f4e565b9150509250929050565b6000602082019050611fb86000830184611d40565b92915050565b611fc781611f25565b82525050565b6000602082019050611fe26000830184611fbe565b92915050565b600060208284031215611ffe57611ffd611cdd565b5b600061200c84828501611f4e565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61205782611d9e565b810181811067ffffffffffffffff821117156120765761207561201f565b5b80604052505050565b6000612089611cd3565b9050612095828261204e565b919050565b600067ffffffffffffffff8211156120b5576120b461201f565b5b6120be82611d9e565b9050602081019050919050565b82818337600083830152505050565b60006120ed6120e88461209a565b61207f565b9050828152602081018484840111156121095761210861201a565b5b6121148482856120cb565b509392505050565b600082601f83011261213157612130612015565b5b81356121418482602086016120da565b91505092915050565b61215381611e08565b811461215e57600080fd5b50565b6000813590506121708161214a565b92915050565b600080fd5b600080fd5b60008083601f84011261219657612195612015565b5b8235905067ffffffffffffffff8111156121b3576121b2612176565b5b6020830191508360018202830111156121cf576121ce61217b565b5b9250929050565b6000806000806000608086880312156121f2576121f1611cdd565b5b600086013567ffffffffffffffff8111156122105761220f611ce2565b5b61221c8882890161211c565b955050602061222d88828901611cfe565b945050604061223e88828901612161565b935050606086013567ffffffffffffffff81111561225f5761225e611ce2565b5b61226b88828901612180565b92509250509295509295909350565b600067ffffffffffffffff8211156122955761229461201f565b5b61229e82611d9e565b9050602081019050919050565b60006122be6122b98461227a565b61207f565b9050828152602081018484840111156122da576122d961201a565b5b6122e58482856120cb565b509392505050565b600082601f83011261230257612301612015565b5b81356123128482602086016122ab565b91505092915050565b60008060006060848603121561233457612333611cdd565b5b600061234286828701612161565b935050602084013567ffffffffffffffff81111561236357612362611ce2565b5b61236f868287016122ed565b925050604061238086828701611cfe565b9150509250925092565b600080604083850312156123a1576123a0611cdd565b5b60006123af85828601611f4e565b92505060206123c085828601611cfe565b9150509250929050565b60006020820190506123df6000830184611e8a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61241a81611f25565b82525050565b600061242c8383612411565b60208301905092915050565b6000602082019050919050565b6000612450826123e5565b61245a81856123f0565b935061246583612401565b8060005b8381101561249657815161247d8882612420565b975061248883612438565b925050600181019050612469565b5085935050505092915050565b600060208201905081810360008301526124bd8184612445565b905092915050565b600080604083850312156124dc576124db611cdd565b5b60006124ea85828601611cfe565b92505060206124fb85828601612161565b9150509250929050565b60008060006060848603121561251e5761251d611cdd565b5b600061252c86828701611cfe565b935050602061253d86828701611cfe565b925050604061254e86828701611cfe565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061259f57607f821691505b602082108114156125b3576125b2612558565b5b50919050565b7f6572726f723a204e6f7420696e766573746f7200000000000000000000000000600082015250565b60006125ef601383611d5a565b91506125fa826125b9565b602082019050919050565b6000602082019050818103600083015261261e816125e2565b9050919050565b7f6572726f723a20696e73756666696369656e7420736861726573000000000000600082015250565b600061265b601a83611d5a565b915061266682612625565b602082019050919050565b6000602082019050818103600083015261268a8161264e565b9050919050565b600061269c82611c44565b91506126a783611c44565b9250828210156126ba576126b9611c4e565b5b828203905092915050565b7f6572726f723a206e6e6f742061646d696e000000000000000000000000000000600082015250565b60006126fb601183611d5a565b9150612706826126c5565b602082019050919050565b6000602082019050818103600083015261272a816126ee565b9050919050565b7f6572726f723a20636f6e747269627574696f6e206f7665720000000000000000600082015250565b6000612767601883611d5a565b915061277282612731565b602082019050919050565b600060208201905081810360008301526127968161275a565b9050919050565b7f6572726f723a2063616e6e6f742065786563757465206265666f726520656e6460008201527f206f662070726f706f73616c0000000000000000000000000000000000000000602082015250565b60006127f9602c83611d5a565b91506128048261279d565b604082019050919050565b60006020820190508181036000830152612828816127ec565b9050919050565b7f6572726f723a2070726f706f73616c20616c7265616479206578656375746564600082015250565b6000612865602083611d5a565b91506128708261282f565b602082019050919050565b6000602082019050818103600083015261289481612858565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128d582611c44565b91506128e083611c44565b9250826128f0576128ef61289b565b5b828204905092915050565b600061290682611c44565b915061291183611c44565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561294a57612949611c4e565b5b828202905092915050565b7f6572726f723a2063616e6e6f7420657865637574652070726f706f73616c207760008201527f69746820766f7465732062656c6f77206d696e566f7465730000000000000000602082015250565b60006129b1603883611d5a565b91506129bc82612955565b604082019050919050565b600060208201905081810360008301526129e0816129a4565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612a1481612587565b612a1e81866129e7565b94506001821660008114612a395760018114612a4a57612a7d565b60ff19831686528186019350612a7d565b612a53856129f2565b60005b83811015612a7557815481890152600182019150602081019050612a56565b838801955050505b50505092915050565b6000612a928284612a07565b915081905092915050565b7f6572726f723a207478206661696c656400000000000000000000000000000000600082015250565b6000612ad3601083611d5a565b9150612ade82612a9d565b602082019050919050565b60006020820190508181036000830152612b0281612ac6565b9050919050565b7f6572726f723a206e6f7420656e6f756768207368617265730000000000000000600082015250565b6000612b3f601883611d5a565b9150612b4a82612b09565b602082019050919050565b60006020820190508181036000830152612b6e81612b32565b9050919050565b7f6572726f723a206e6f7420656e6f75676820617661696c61626c652066756e6460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bd1602183611d5a565b9150612bdc82612b75565b604082019050919050565b60006020820190508181036000830152612c0081612bc4565b9050919050565b7f6572726f723a20696e73756666696369656e742066756e647300000000000000600082015250565b6000612c3d601983611d5a565b9150612c4882612c07565b602082019050919050565b60006020820190508181036000830152612c6c81612c30565b9050919050565b6000612c7e82611c44565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612cb157612cb0611c4e565b5b600182019050919050565b6000612cc782611e29565b612cd181856129e7565b9350612ce1818560208601611d6b565b80840191505092915050565b6000612cf98284612cbc565b915081905092915050565b7f6572726f723a20696e766573746f722063616e206f6e6c7920766f7465206f6e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612d60602283611d5a565b9150612d6b82612d04565b604082019050919050565b60006020820190508181036000830152612d8f81612d53565b9050919050565b7f6572726f723a2070726f706f73616c20616c726561647920656e646564000000600082015250565b6000612dcc601d83611d5a565b9150612dd782612d96565b602082019050919050565b60006020820190508181036000830152612dfb81612dbf565b9050919050565b7f6572726f723a206d696e566f7465732073686f756c642062652062657477656560008201527f6e203020616e6420323030000000000000000000000000000000000000000000602082015250565b6000612e5e602b83611d5a565b9150612e6982612e02565b604082019050919050565b60006020820190508181036000830152612e8d81612e51565b905091905056fea2646970667358221220064f47fdcc0f503e99106d8918a9afa47fd8d9557bf05e8ff9476c17221dd09964736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A DAO making contract, for proposals, and contributions, and voting. collects money from investors and allocates shares. Keep track of contributions and shares. Allow investors transfer shares. Allow investment proposals to be created and voted. Execute successful investment proposals.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "isInvestor",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 27,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "shares",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 33,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "votes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 38,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "proposals",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Proposal)19_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "totalShares",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 42,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "availableFunds",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 44,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "contributionTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "contributionEnd",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 48,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "nextProposalId",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 50,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "voteTime",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 52,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "minVotes",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "admin",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 57,
        "contract": "contracts/DAOContract.sol:DAO",
        "label": "investors",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Proposal)19_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct DAO.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)19_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)19_storage": {
        "encoding": "inplace",
        "label": "struct DAO.Proposal",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "votes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "end",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 14,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "recipient",
            "offset": 0,
            "slot": "5",
            "type": "t_address_payable"
          },
          {
            "astId": 16,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "data",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/DAOContract.sol:DAO",
            "label": "executed",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}